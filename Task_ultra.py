"""Дана последовательность натуральных чисел (одно число в строке), завершающаяся числом 0. 
Определите значение второго по величине элемента в этой последовательности, то есть элемента, 
который будет наибольшим, если из последовательности удалить наибольший элемент.

В этой задаче нельзя использовать глобальные переменные. 
Функция получает данные, считывая их с клавиатуры, а не получая их в виде параметра. 
В программе на языке Python функция возвращает результат в виде кортежа из нескольких 
чисел и функция вообще не получает никаких параметров. 

В программе на языке C++ результат записывается в переменные, которые передаются в функцию по ссылке. 

Других параметров, кроме как используемых для возврата значения, функция не получает.
Гарантируется, что последовательность содержит хотя бы два числа (кроме нуля).

1 3 5 7 3 6 8 4 3 2 0 -> 7

1 2 3 4 5 6 3 1 2 5 3 -> 5"""

# Функция для приема пользовательского ввода последовательности
def func():
    tuple_creation = tuple(input("Введите числа без запятых: "))
    print(tuple_creation)
    return tuple_creation

# Функция для определения максимального значения кортежа и определение второго по величине значения
def find_num_in_tuple(tuple_creation):
    max = 0
    tuple_arr = []
    # Перебор всех элементов кортежа с целью поиска максимального значения
    for i in tuple_creation:
        if int(i) > max:
            max = int(i)

    # Запись элементов кортежа в массив (всех элементов кроме максимального значения)
    for j in tuple_creation:
        if int(j) == max:
            continue
        else:
            tuple_arr.append(int(j))

    # Поиск максимального значения в массиве
    max = 0
    for k in tuple_arr:
        if int(k) > max:
            max = int(k)    
    
    return max

#===============================#
# Основной блок
print(find_num_in_tuple(func()))
#===============================#